#!/bin/bash

banner() {

 
    while read -r line; do
        printf "\e[1;31m\e[%s\e[0m\n" "$line"
    done <<-EOF
    _    ____                      ;
    _   /---.'.__             ____//
    _        '--.\           /.---'
    _  ________  \!         //
    _ /.------.\  \|      .//   ______
    _//   ___  \ \ ! /|\  //  _/_----.\__
    _|/  /.-.\  \ \:|< >|// _/.'..\   '--'
    _'  //   !'. | !'.|.'/ /_/ /  \!
    _  //     \ \_\!" ' ~\-'.-'    \!
    _ //       '-._| :H: |'-.__     \!
    _//           (!'==='!)'-._\     ||
    _||                        \!    \|
    _||      crawl@synacktra    \!    '
    _|/                          \!
    _'                           |!
    _                            ||
    _                            \|
    _                             '
    _Coded By Harsh Verma with Love <3 ❤
EOF
}


help_text () {

    while read -r line; do
        printf "%s\n" "$line"
    done <<-EOF
    |Usage:
    |  ${0##*/} [-f] [href|script|form] 
    |
    |Options:
    |  -h show help menu
    |  -d number of depth to scrape.
    |  -f attribute a type of link. [href|script|form]
    |
    |Example:
    |  crawl -f script [domain].[TLD]
    |  crawl -d 1 [domain].[TLD]/directory
    |  crawl -f href [domain].[TLD]/directory?key=value
    |
    |Fetches all href, script and form links, if no flags are specified.
    |Uses HTTPs as default protocol, if no protocol is specified.
EOF
}

attribute="(\bhref|<script.*\bsrc|<form.*\baction)"

while getopts 'hf:d:' OPT; do
    case $OPT in
        f) 
            case "$OPTARG" in
                script)
                    attribute="<script.*\bsrc" ;;
                href)
                    attribute="\bhref" ;;
                form)
                    attribute="form.*\baction" ;;
                *)
                    help_text
                    exit 1
                    ;;
             esac
             ;;
         d)
             case "$OPTARG" in
                 1|2)
                     depth=$OPTARG
                     ;;
                 *)
                     banner
                     printf "%s\n" "crawl can only scrape till Depth-2!"
                     exit 1
                     ;;
             esac
             ;;
         h|*)
             banner
             help_text
             exit 0
             ;;
    esac
done


crawl() {
    
    agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
    base_url=$(printf "%s" "$1" | awk -F "#|?" '{print $1}' | sed -E 's#(.*)/$#\1#')
    site=$(printf "%s" "$base_url" | grep -Eo "^https?://[^/]+")

    curl -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \
         -H 'Accept-Language: en-GB,en-US;q=0.8,en;q=0.6' -A "$agent" -sL "$1" | \
         grep -Eo "$attribute=[\"'][^\"']+" | sed -E -e "s@$attribute=[\"'](\./|javascript:.+)?@@" \
         -e "s@[[:space:]]@%20@g" \
         -e "s@^//.+@https:&@" \
         -e "s@^/.*@$site&@" \
         -e 's@^\.\./.*@cnt=$(($(printf "%s" '"$base_url"'|sed -E "s#https?://##"|\
                        grep -Eo "(/[^/]*)"|wc -l) - $(printf "%s" "&"| grep -Eo "\.\./"|wc -l)));\
                        cnt=$(printf "%s" "$cnt"| sed -E "s#^-[0-9]+#0#");\
                        dir=$(printf "%s" "&"|sed -E "s#[.]{2}/##g");\
                        URL=$(printf "%s" '"$base_url"'|grep -Eo "https?://[^/]+(/[^/]*){$cnt}");\
                        printf "%s/%s" "$URL" "$dir"@e' \
         -e "/^(http|tel)/!s@.*@$base_url\/&@"
}

# INPUT
url=$(printf "%s" "${@: -1}")
if [ -p  /dev/stdin ]; then
    read url
elif [ "$#" -eq 2 ]; then
    printf "\033[31m%s\033[0m\n" "No URL Detected!" >&2 && exit 1
elif [ -z "$*" ]; then
    banner
    exit
fi
[[ ! "$url" =~ ^https?://.* ]] && url="https://$url"

# OUTPUT
[[ -t 1 ]] && format="\033[1;31m%s\033[0m" || format="%s"

[ "$depth" -eq 1 ] && crawl "$url" && exit 0

cache=( $(crawl "$url") )
for obj in ${cache[@]}
do
    [[ "$url" =~ $obj/?$ ]] && continue
    [[ "$obj" =~ (tel:|.+\.(js|css)).* ]] && printf "$format\n" "$obj" && continue
    printf "$format\n%s\n" "$obj" "$(crawl "$obj" | sort)" &

done | uniq
